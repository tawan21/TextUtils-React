{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","style","height","alert","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","caps","msg","Navbar","mode","href","title","id","onClick","toggleMode","width","cursor","TextForm","words","text","split","filter","ele","length","useState","setText","color","heading","htmlFor","value","rows","onChange","event","target","backgroundColor","disabled","newText","showAlert","navigator","clipboard","writeText","join","defaultProps","aboutText","App","setMode","setAlert","message","setTimeout","cls","document","body","classList","remove","add","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0bd20b40.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const caps = (word) => {\r\n        const lower = word.toLowerCase()\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n    \r\n    return (\r\n        <div style={{height: '50px'}}>\r\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{caps(props.alert.type)}</strong>: {props.alert.msg}\r\n            </div>}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" aria-current=\"page\" href=\"#\">Home</a>\r\n                    </li>\r\n                    {/* <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n                    </li> */}\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                    <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                    <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n                    <div className=\"d-flex\">\r\n                        <div className=\"bg-primary rounded mx-2\" onClick={()=>{props.toggleMode('primary')}} style={{height: '30px', width:'30px', cursor: 'pointer'}}></div>\r\n                        <div className=\"bg-danger rounded mx-2\" onClick={()=>{props.toggleMode('danger')}} style={{height: '30px', width:'30px', cursor: 'pointer'}}></div>\r\n                        <div className=\"bg-success rounded mx-2\" onClick={()=>{props.toggleMode('success')}} style={{height: '30px', width:'30px', cursor: 'pointer'}}></div>\r\n                        <div className=\"bg-warning rounded mx-2\" onClick={()=>{props.toggleMode('warning')}} style={{height: '30px', width:'30px', cursor: 'pointer'}}></div>\r\n                        <div className=\"bg-light rounded mx-2 border\" onClick={()=>{props.toggleMode('light')}} style={{height: '30px', width:'30px', cursor: 'pointer'}}></div>\r\n                        <div className=\"bg-dark rounded mx-2 border\" onClick={()=>{props.toggleMode('dark')}} style={{height: '30px', width:'30px', cursor: 'pointer'}}></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase()\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase!\",\"success\")\r\n    }\r\n    const handleLoClick = () => {\r\n        let newText = text.toLowerCase()\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lowercase!\",\"success\")\r\n    }\r\n    const handleClrClick = () => {\r\n        let newText = ''\r\n        setText(newText)\r\n        props.showAlert(\"Text cleared!\",\"success\")\r\n    }\r\n    const handleCpyClick = () => {\r\n        navigator.clipboard.writeText(text)\r\n        props.showAlert(\"Text copied to clipboard!\",\"success\")\r\n    }\r\n    const handleEsClick = () => {\r\n        let newText = text.split(/[ ]+/)\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Whitespaces removed from text!\",\"success\")\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n    const words = () => {\r\n        return text.split(/\\s+/).filter((ele) => { return ele.length !== 0 }).length\r\n    }\r\n    const [text, setText] = useState('')\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{color: props.mode === 'dark' ? 'white' : 'black'}}>\r\n                <h1 className='mb-4'>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"myBox\" className=\"form-label visually-hidden\">Textarea</label>\r\n                    <textarea className=\"form-control\" value={text} id=\"myBox\" rows=\"8\" onChange={handleOnChange} style={{backgroundColor: props.mode === 'light' ? 'floralwhite' : 'lightgrey', color: props.mode === 'dark' ? 'white' : 'black'}}></textarea>\r\n                </div>\r\n                <button disabled={text.length === 0} className='btn btn-secondary mx-1 my-1' onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button disabled={text.length === 0} className='btn btn-secondary mx-1 my-1' onClick={handleLoClick}>Convert to Lowercase</button>\r\n                <button disabled={text.length === 0} className='btn btn-secondary mx-1 my-1' onClick={handleClrClick}>Clear Text</button>\r\n                <button disabled={text.length === 0} className='btn btn-secondary mx-1 my-1' onClick={handleCpyClick}>Copy Text</button>\r\n                <button disabled={text.length === 0} className='btn btn-secondary mx-1 my-1' onClick={handleEsClick}>Remove Extra Spaces</button>\r\n            </div>\r\n            <div className=\"container my-3\" style={{color: props.mode === 'dark' ? 'white' : 'black'}}>\r\n                <h2>Your text summary</h2>\r\n                <p>\r\n                    {words()} words and {text.length} characters\r\n                </p>\r\n                <p>\r\n                    {0.008 * words()} minutes to read\r\n                </p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length > 0 ? text : \"Nothing to preview!\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { React, useState } from 'react'\nimport './App.css'\nimport Alert from './components/Alert'\n// import About from './components/About'\nimport Navbar from './components/Navbar'\nimport TextForm from './components/TextForm'\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\"\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500)\n  }\n\n  const removeBodyClasses = ()=>{\n    document.body.classList.remove('bg-light')\n    document.body.classList.remove('bg-dark')\n    document.body.classList.remove('bg-warning')\n    document.body.classList.remove('bg-danger')\n    document.body.classList.remove('bg-success')\n    document.body.classList.remove('bg-primary') \n  }\n\n  const toggleMode = (cls)=>{\n    removeBodyClasses()\n    document.body.classList.add('bg-'+cls)\n    if(mode === 'light'){\n      setMode('dark')\n      showAlert(\"Dark mode has been enabled\", \"success\") \n    }\n    else{\n      setMode('light')\n      showAlert(\"Light mode has been enabled\", \"success\")\n    }\n  }\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Switch>\n            <Route exact path=\"/about\">\n              <About mode={mode}/>\n            </Route>\n            <Route exact path=\"/\"> */}\n              <TextForm showAlert={showAlert} heading=\"Try TextUtils &mdash; the text editing utility\" mode={mode} />\n            {/* </Route>\n          </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}